package Model;
// Generated Jan 14, 2011 3:39:55 PM by Hibernate Tools 3.2.1.GA


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Rights generated by hbm2java
 */
@Entity
@Table(name="rights"
    ,catalog="ashrm"
)
public class Rights  implements java.io.Serializable {


     private RightsId id;
     private Module module;
     private UserGroup userGroup;
     private Short addition;
     private Short editing;
     private Short deletion;
     private Short viewing;

    public Rights() {
    }

	
    public Rights(RightsId id, Module module, UserGroup userGroup) {
        this.id = id;
        this.module = module;
        this.userGroup = userGroup;
    }
    public Rights(RightsId id, Module module, UserGroup userGroup, Short addition, Short editing, Short deletion, Short viewing) {
       this.id = id;
       this.module = module;
       this.userGroup = userGroup;
       this.addition = addition;
       this.editing = editing;
       this.deletion = deletion;
       this.viewing = viewing;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="modId", column=@Column(name="mod_id", nullable=false, length=36) ), 
        @AttributeOverride(name="usergId", column=@Column(name="userg_id", nullable=false, length=36) ) } )
    public RightsId getId() {
        return this.id;
    }
    
    public void setId(RightsId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="mod_id", nullable=false, insertable=false, updatable=false)
    public Module getModule() {
        return this.module;
    }
    
    public void setModule(Module module) {
        this.module = module;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="userg_id", nullable=false, insertable=false, updatable=false)
    public UserGroup getUserGroup() {
        return this.userGroup;
    }
    
    public void setUserGroup(UserGroup userGroup) {
        this.userGroup = userGroup;
    }
    
    @Column(name="addition")
    public Short getAddition() {
        return this.addition;
    }
    
    public void setAddition(Short addition) {
        this.addition = addition;
    }
    
    @Column(name="editing")
    public Short getEditing() {
        return this.editing;
    }
    
    public void setEditing(Short editing) {
        this.editing = editing;
    }
    
    @Column(name="deletion")
    public Short getDeletion() {
        return this.deletion;
    }
    
    public void setDeletion(Short deletion) {
        this.deletion = deletion;
    }
    
    @Column(name="viewing")
    public Short getViewing() {
        return this.viewing;
    }
    
    public void setViewing(Short viewing) {
        this.viewing = viewing;
    }




}


