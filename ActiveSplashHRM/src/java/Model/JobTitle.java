package Model;
// Generated Jan 14, 2011 3:39:55 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * JobTitle generated by hbm2java
 */
@Entity
@Table(name="job_title"
    ,catalog="ashrm"
)
public class JobTitle  implements java.io.Serializable {


     private String jobtitCode;
     private Salarygrade salarygrade;
     private JobSpec jobSpec;
     private String jobtitName;
     private String jobtitDesc;
     private String jobtitComm;
     private Byte isActive;
     private Set<Employee> employees = new HashSet<Employee>(0);
     private Set<Empstat> empstats = new HashSet<Empstat>(0);
     private Set<JobVacancy> jobVacancies = new HashSet<JobVacancy>(0);

    public JobTitle() {
    }

	
    public JobTitle(String jobtitCode) {
        this.jobtitCode = jobtitCode;
    }
    public JobTitle(String jobtitCode, Salarygrade salarygrade, JobSpec jobSpec, String jobtitName, String jobtitDesc, String jobtitComm, Byte isActive, Set<Employee> employees, Set<Empstat> empstats, Set<JobVacancy> jobVacancies) {
       this.jobtitCode = jobtitCode;
       this.salarygrade = salarygrade;
       this.jobSpec = jobSpec;
       this.jobtitName = jobtitName;
       this.jobtitDesc = jobtitDesc;
       this.jobtitComm = jobtitComm;
       this.isActive = isActive;
       this.employees = employees;
       this.empstats = empstats;
       this.jobVacancies = jobVacancies;
    }
   
     @Id 
    
    @Column(name="jobtit_code", unique=true, nullable=false, length=13)
    public String getJobtitCode() {
        return this.jobtitCode;
    }
    
    public void setJobtitCode(String jobtitCode) {
        this.jobtitCode = jobtitCode;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="sal_grd_code")
    public Salarygrade getSalarygrade() {
        return this.salarygrade;
    }
    
    public void setSalarygrade(Salarygrade salarygrade) {
        this.salarygrade = salarygrade;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="jobspec_id")
    public JobSpec getJobSpec() {
        return this.jobSpec;
    }
    
    public void setJobSpec(JobSpec jobSpec) {
        this.jobSpec = jobSpec;
    }
    
    @Column(name="jobtit_name", length=50)
    public String getJobtitName() {
        return this.jobtitName;
    }
    
    public void setJobtitName(String jobtitName) {
        this.jobtitName = jobtitName;
    }
    
    @Column(name="jobtit_desc", length=200)
    public String getJobtitDesc() {
        return this.jobtitDesc;
    }
    
    public void setJobtitDesc(String jobtitDesc) {
        this.jobtitDesc = jobtitDesc;
    }
    
    @Column(name="jobtit_comm", length=400)
    public String getJobtitComm() {
        return this.jobtitComm;
    }
    
    public void setJobtitComm(String jobtitComm) {
        this.jobtitComm = jobtitComm;
    }
    
    @Column(name="is_active")
    public Byte getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(Byte isActive) {
        this.isActive = isActive;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="jobTitle")
    public Set<Employee> getEmployees() {
        return this.employees;
    }
    
    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="jobtit_empstat", catalog="ashrm", joinColumns = { 
        @JoinColumn(name="jobtit_code", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="estat_code", nullable=false, updatable=false) })
    public Set<Empstat> getEmpstats() {
        return this.empstats;
    }
    
    public void setEmpstats(Set<Empstat> empstats) {
        this.empstats = empstats;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="jobTitle")
    public Set<JobVacancy> getJobVacancies() {
        return this.jobVacancies;
    }
    
    public void setJobVacancies(Set<JobVacancy> jobVacancies) {
        this.jobVacancies = jobVacancies;
    }




}


