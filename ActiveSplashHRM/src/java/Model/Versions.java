package Model;
// Generated Jan 14, 2011 3:39:55 PM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Versions generated by hbm2java
 */
@Entity
@Table(name="versions"
    ,catalog="ashrm"
)
public class Versions  implements java.io.Serializable {


     private String id;
     private Users usersByCreatedBy;
     private Users usersByModifiedBy;
     private DbVersion dbVersion;
     private FileVersion fileVersion;
     private String name;
     private Date enteredDate;
     private Date modifiedDate;
     private byte deleted;
     private String description;
     private Set<Module> modules = new HashSet<Module>(0);

    public Versions() {
    }

	
    public Versions(String id, byte deleted) {
        this.id = id;
        this.deleted = deleted;
    }
    public Versions(String id, Users usersByCreatedBy, Users usersByModifiedBy, DbVersion dbVersion, FileVersion fileVersion, String name, Date enteredDate, Date modifiedDate, byte deleted, String description, Set<Module> modules) {
       this.id = id;
       this.usersByCreatedBy = usersByCreatedBy;
       this.usersByModifiedBy = usersByModifiedBy;
       this.dbVersion = dbVersion;
       this.fileVersion = fileVersion;
       this.name = name;
       this.enteredDate = enteredDate;
       this.modifiedDate = modifiedDate;
       this.deleted = deleted;
       this.description = description;
       this.modules = modules;
    }
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false, length=36)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="created_by")
    public Users getUsersByCreatedBy() {
        return this.usersByCreatedBy;
    }
    
    public void setUsersByCreatedBy(Users usersByCreatedBy) {
        this.usersByCreatedBy = usersByCreatedBy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="modified_by")
    public Users getUsersByModifiedBy() {
        return this.usersByModifiedBy;
    }
    
    public void setUsersByModifiedBy(Users usersByModifiedBy) {
        this.usersByModifiedBy = usersByModifiedBy;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="db_version")
    public DbVersion getDbVersion() {
        return this.dbVersion;
    }
    
    public void setDbVersion(DbVersion dbVersion) {
        this.dbVersion = dbVersion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="file_version")
    public FileVersion getFileVersion() {
        return this.fileVersion;
    }
    
    public void setFileVersion(FileVersion fileVersion) {
        this.fileVersion = fileVersion;
    }
    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="entered_date", length=19)
    public Date getEnteredDate() {
        return this.enteredDate;
    }
    
    public void setEnteredDate(Date enteredDate) {
        this.enteredDate = enteredDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="modified_date", length=19)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }
    
    @Column(name="deleted", nullable=false)
    public byte getDeleted() {
        return this.deleted;
    }
    
    public void setDeleted(byte deleted) {
        this.deleted = deleted;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="versions")
    public Set<Module> getModules() {
        return this.modules;
    }
    
    public void setModules(Set<Module> modules) {
        this.modules = modules;
    }




}


